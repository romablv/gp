
ARCH	?= x86_64
BUILD	?= /tmp/gp/$(ARCH)
TARGET	= $(BUILD)/gp.exe

CROSS	= $(ARCH)-w64-mingw32
MINGW	= ../mingw/$(ARCH)-w64-mingw32

CC	= $(CROSS)-gcc
LD	= $(CROSS)-gcc
STRIP	= $(CROSS)-strip -s
MK	= mkdir -p
RM      = rm -rf

CFLAGS  = -std=gnu99 -Wall -O3 -flto=auto -g3 -pipe

CFLAGS  += -ffinite-math-only \
	   -fno-math-errno \
	   -fno-signed-zeros \
	   -fno-trapping-math \
	   -fno-associative-math \
	   -fno-reciprocal-math \
	   -ffp-contract=fast

CFLAGS  += -fno-stack-protector
CFLAGS  += -I$(MINGW)/include
CFLAGS  += -D_WINDOWS -D_LEGACY

LFLAGS	= -lm -lSDL2 -lSDL2_ttf -lSDL2_image -static
LFLAGS	+= -L$(MINGW)/lib

LFLAGS  += -Wl,--gc-sections -Wl,--no-undefined -lusp10 -ldinput8 -ldxguid \
	   -ldxerr8 -luser32 -lgdi32 -lwinmm -limm32 -lole32 -loleaut32 \
	   -lshell32 -lsetupapi -lversion -luuid -lrpcrt4 -static-libgcc

OBJS	= async.o \
	  dirent.o \
	  draw.o \
	  edit.o \
	  font.o \
	  gp.o \
	  lang.o \
	  lse.o \
	  lz4.o \
	  menu.o \
	  plot.o \
	  read.o \
	  scheme.o \
	  svg.o

GP_OBJS	= $(addprefix $(BUILD)/, $(OBJS))

all: $(TARGET)

$(BUILD)/%.o: %.c
	@ echo "  CC    " $<
	@ $(MK) $(dir $@)
	@ $(CC) -c $(CFLAGS) -MMD -o $@ $<

$(TARGET): $(GP_OBJS)
	@ echo "  LD    " $(notdir $@)
	@ $(LD) $(CFLAGS) -o $@ $^ $(LFLAGS)
	@ echo "  STRIP " $(notdir $@)
	@ $(STRIP) $@

zip: $(TARGET)
	@ echo "  ZIP   " $(notdir $<)
	@ zip -j9 $(BUILD)/gp-$(ARCH)-$(shell hg id -b)-$(shell hg id -n).zip $<

clean:
	@ echo "  CLEAN "
	@ $(RM) $(BUILD)

include $(wildcard $(BUILD)/*.d)

